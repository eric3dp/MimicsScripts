Preparation for FEA
--------------------

In this tutorial, some basic features of remeshing in 3-matic are presented using the project Femur.mxp that is located in the 3-matic installation folder under the folder `DemoFiles`.  

The completed script can be found in the 3-matic installation folder in :file:`DemoFiles\\scripts\\Preparation for FEA.py`. 
We will describe the different steps in the script in more detail.
The first step is to open the project Femur.mxp in 3-matic.
Note: Before each step, the part is duplicated. Consequently, there is a copy of a part before and after each operation in this tutorial.


.. code-block:: python

	import trimatic
	import os
	# Open the project Femur.mxp
	trimatic.new_project()
	application_exe = trimatic.get_application_path()
	application_path = os.path.dirname(application_exe)
	path = application_path + "/DemoFiles/Femur.mxp"
	trimatic.open_project(path)

In the next step the femur part is located and duplicated. The copy of the initial part is renamed.


.. code-block:: python

	femur = trimatic.data.find_part("femur")
	dup_fem = trimatic.duplicate(femur)
	femur.visible = False
	dup_fem.name = "femur_dup"

In the following step, the duplicated part *femur_dup* is wrapped and smoothed. Since the wrapping operation creates a new part after wrapping, the wrapped part is duplicated and the new part is renamed. The smoothing operation is performed to the renamed part. For both operations, wrap and smooth, appropriate parameters are selected for this tutorial.

 
.. code-block:: python

    # Wrap and smooth the part
    wrapped_fem = trimatic.design.wrap(entities=dup_fem,gap_closing_distance=0.5,smallest_detail=0.5)
    dup_fem.visible = False
    wrapped_fem.visible = False
    smoothed_fem = trimatic.duplicate(entities=wrapped_fem)
    smoothed_fem.name = wrapped_fem.name+"_smoothed"
    trimatic.smooth(entities=smoothed_fem,smooth_factor=0.6)
    
.. image:: Preparation_for_FEA/wrapped.png
 :width: 100px
 :height: 10px
 :align: center

The following step is to remesh the part. The smoothed part is duplicated and renamed. The remeshing operation is performed with selected parameters to obtain a high quality mesh.


.. code-block:: python

	# Remesh the part
	smoothed_fem.visible = False
	remeshed_fem = trimatic.duplicate(smoothed_fem)
	remeshed_fem.name = smoothed_fem.name+"_remeshed"
	remeshed_fem = trimatic.adaptive_remesh(entities=remeshed_fem,target_triangle_edge_length=1,preserve_surface_contours=True)

If the remeshing operations are successful, a fix operation is performed to the remeshed part and the volume mesh is calculated. The part is again duplicated before the fix and volume mesh operation. The information is presented in the logger.

.. code-block:: python

	if remeshed_fem:
	    remeshed_fem = trimatic.find_object(smoothed_fem.name+"_remeshed")
	# Fix the mesh
	    remeshed_fem.visible = False
	    fixed_fem = trimatic.duplicate(remeshed_fem)
	    fixed_fem.name = remeshed_fem.name + "_fixed"
	    trimatic.auto_fix(entities=fixed_fem)
	# Calculate volume mesh
	    fixed_fem.visible = False
	    vol_mesh_fem = trimatic.duplicate(fixed_fem)
	    vol_mesh_fem.name = fixed_fem.name + "_volume_mesh"
	    trimatic.create_volume_mesh(part=vol_mesh_fem,maximum_edge_length=1)
        
.. image:: Preparation_for_FEA/metadata_fea_preparation.png
 :width: 500px
 :height: 500px
 :align: center

